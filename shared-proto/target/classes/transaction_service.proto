syntax = "proto3";
option java_multiple_files = true;
option java_package = "com.pm.grpc.transaction";
package transaction;

import "common.proto";

service TransactionService {
  rpc ProcessTransaction (ProcessTransactionRequest) returns (ProcessTransactionResponse);
  rpc GetTransaction (GetTransactionRequest) returns (GetTransactionResponse);
  rpc GetTransactionsByAccount (GetTransactionsByAccountRequest) returns (GetTransactionsByAccountResponse);
  rpc GetTransactionsByCustomer (GetTransactionsByCustomerRequest) returns (GetTransactionsByCustomerResponse);
  rpc GetAccountBalance (GetAccountBalanceRequest) returns (GetAccountBalanceResponse);
}

enum TransactionType {
  TRANSACTION_TYPE_UNSPECIFIED = 0;
  TRANSACTION_TYPE_DEPOSIT = 1;
  TRANSACTION_TYPE_WITHDRAWAL = 2;
  TRANSACTION_TYPE_TRANSFER = 3;
}

enum TransactionStatus {
  TRANSACTION_STATUS_UNSPECIFIED = 0;
  TRANSACTION_STATUS_PENDING = 1;
  TRANSACTION_STATUS_COMPLETED = 2;
  TRANSACTION_STATUS_FAILED = 3;
  TRANSACTION_STATUS_CANCELLED = 4;
}

message ProcessTransactionRequest {
  string account_id = 1;
  TransactionType transaction_type = 2;
  string amount = 3; // BigDecimal as string for precision
  string description = 4;
  string reference_number = 5; // Optional external reference
}

message ProcessTransactionResponse {
  string transaction_id = 1;
  string account_id = 2;
  TransactionType transaction_type = 3;
  string amount = 4;
  string description = 5;
  string reference_number = 6;
  TransactionStatus status = 7;
  string previous_balance = 8;
  string new_balance = 9;
  string processed_date = 10;
  common.ServiceResponse service_response = 11;
}

message GetTransactionRequest {
  string transaction_id = 1;
}

message GetTransactionResponse {
  string transaction_id = 1;
  string account_id = 2;
  string customer_id = 3;
  TransactionType transaction_type = 4;
  string amount = 5;
  string description = 6;
  string reference_number = 7;
  TransactionStatus status = 8;
  string previous_balance = 9;
  string new_balance = 10;
  string processed_date = 11;
  common.ServiceResponse service_response = 12;
}

message GetTransactionsByAccountRequest {
  string account_id = 1;
  int32 limit = 2; // Optional: limit number of results
  int32 offset = 3; // Optional: for pagination
}

message GetTransactionsByAccountResponse {
  repeated GetTransactionResponse transactions = 1;
  int32 total_count = 2;
  common.ServiceResponse service_response = 3;
}

message GetTransactionsByCustomerRequest {
  string customer_id = 1;
  int32 limit = 2; // Optional: limit number of results
  int32 offset = 3; // Optional: for pagination
}

message GetTransactionsByCustomerResponse {
  repeated GetTransactionResponse transactions = 1;
  int32 total_count = 2;
  common.ServiceResponse service_response = 3;
}

message GetAccountBalanceRequest {
  string account_id = 1;
}

message GetAccountBalanceResponse {
  string account_id = 1;
  string current_balance = 2;
  string last_updated = 3;
  common.ServiceResponse service_response = 4;
}