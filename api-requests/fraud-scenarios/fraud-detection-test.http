### Fraud Detection Test Scenarios
### These tests demonstrate the fraud detection system in action

### Set up variables (update these based on actual IDs)
@accountId = 11111111-1111-1111-1111-111111111111
@customerId = 22222222-2222-2222-2222-222222222222

###
### SCENARIO 1: Excessive Daily Withdrawal Amount (>$1000)
###

### 1.1 First withdrawal - Should succeed ($500)
POST http://localhost:8080/api/transactions
Content-Type: application/json

{
  "accountId": "{{accountId}}",
  "transactionType": "WITHDRAWAL",
  "amount": 500.00,
  "description": "ATM withdrawal - Test 1"
}

### 1.2 Second withdrawal - Should succeed (total $900)
POST http://localhost:8080/api/transactions
Content-Type: application/json

{
  "accountId": "{{accountId}}",
  "transactionType": "WITHDRAWAL",
  "amount": 400.00,
  "description": "ATM withdrawal - Test 2"
}

### 1.3 Third withdrawal - Should FAIL (would exceed $1000 daily limit)
POST http://localhost:8080/api/transactions
Content-Type: application/json

{
  "accountId": "{{accountId}}",
  "transactionType": "WITHDRAWAL",
  "amount": 200.00,
  "description": "ATM withdrawal - Test 3 (Should fail)"
}

###
### SCENARIO 2: Excessive Daily Withdrawal Count (>5 times)
###

### 2.1-2.5 Make 5 small withdrawals (should all succeed)
POST http://localhost:8080/api/transactions
Content-Type: application/json

{
  "accountId": "{{accountId}}",
  "transactionType": "WITHDRAWAL",
  "amount": 10.00,
  "description": "Small withdrawal 1"
}

### 2.6 Sixth withdrawal - Should FAIL (exceeds count limit)
POST http://localhost:8080/api/transactions
Content-Type: application/json

{
  "accountId": "{{accountId}}",
  "transactionType": "WITHDRAWAL",
  "amount": 10.00,
  "description": "Small withdrawal 6 (Should fail)"
}

###
### Check Fraud Alerts
###

### Get all fraud alerts
GET http://localhost:5003/fraud/alerts

### Get fraud alerts for specific customer
GET http://localhost:5003/fraud/alerts/customer/{{customerId}}

###
### Verify Transaction History via Kafka
###

### Check transaction history (should show all transactions including failed ones)
GET http://localhost:8080/api/transactions/account/{{accountId}}

###
### Test Deposits (Should not trigger fraud checks)
###

### Large deposit - Should succeed (no fraud check on deposits)
POST http://localhost:8080/api/transactions
Content-Type: application/json

{
  "accountId": "{{accountId}}",
  "transactionType": "DEPOSIT",
  "amount": 5000.00,
  "description": "Large deposit - No fraud check"
}